name: Release R Package

on:
  pull_request:
    branches:
      - main
    types: [closed]
  workflow_dispatch:

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup R
        uses: r-lib/actions/setup-r@v2

      - name: Cache R package dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ hashFiles('**/DESCRIPTION') }}
          restore-keys: |
            ${{ runner.os }}-r-

      - name: Install dependencies
        uses: r-lib/actions/setup-r-dependencies@v2

      - name: Build R package
        run: R CMD build .

      - name: List files for debugging
        run: ls -R

      - name: Get package version
        run: |
          VERSION=$(grep -m 1 '^Version:' DESCRIPTION | cut -d ' ' -f 2)
          echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV

      # --- Start of Corrected Section ---
      - name: Find and Prepare Package Asset
        id: find_package
        run: |
          # Search for the tarball in the current directory and its parent
          PACKAGE_PATH=$(find . -maxdepth 2 -name "*.tar.gz" -type f | head -n 1)

          # Check if the file was found. If not, exit with an error.
          if [[ -z "$PACKAGE_PATH" ]]; then
            echo "Error: R package tarball (*.tar.gz) not found."
            exit 1
          fi
          
          PACKAGE_FILENAME=$(basename "$PACKAGE_PATH")
          
          echo "PACKAGE_PATH=$PACKAGE_PATH" >> $GITHUB_ENV
          echo "PACKAGE_FILENAME=$PACKAGE_FILENAME" >> $GITHUB_ENV
          
          echo "Found package at: $PACKAGE_PATH"
          echo "Package filename is: $PACKAGE_FILENAME"
      # --- End of Corrected Section ---

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.RELEASE_PAT }}
          tag_name: v${{ env.PACKAGE_VERSION }}
          name: Release v${{ env.PACKAGE_VERSION }}
          body: |
            New release of the R package.
            Version: ${{ env.PACKAGE_VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.PACKAGE_PATH }}
          asset_name: ${{ env.PACKAGE_FILENAME }}
          asset_content_type: application/gzip
