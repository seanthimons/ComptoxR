name: Release R Package

on:
  pull_request:
    branches:
      - main
    types: [closed]
  workflow_dispatch:

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup R
        uses: r-lib/actions/setup-r@v2

      - name: Cache R package dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ hashFiles('**/DESCRIPTION') }}
          restore-keys: |
            ${{ runner.os }}-r-

      - name: Install dependencies
        uses: r-lib/actions/setup-r-dependencies@v2

      - name: Build R package
        run: R CMD build .

      # Optional: Add this step to see where files are located for debugging
      - name: List files in parent directory
        run: ls -R ../

      - name: Get package info
        id: get_info
        run: |
          PACKAGE_NAME=$(grep -m 1 '^Package:' DESCRIPTION | cut -d ' ' -f 2)
          PACKAGE_VERSION=$(grep -m 1 '^Version:' DESCRIPTION | cut -d ' ' -f 2)
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
          echo "Package name: $PACKAGE_NAME"
          echo "Package version: $PACKAGE_VERSION"

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.RELEASE_PAT }}
          tag_name: v${{ env.PACKAGE_VERSION }}
          name: Release v${{ env.PACKAGE_VERSION }}
          body: |
            New release of the R package.
            Version: ${{ env.PACKAGE_VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          # Corrected Path: Look in the parent directory (../) for the tarball
          asset_path: ../${{ env.PACKAGE_NAME }}_${{ env.PACKAGE_VERSION }}.tar.gz
          asset_name: ${{ env.PACKAGE_NAME }}_${{ env.PACKAGE_VERSION }}.tar.gz
          asset_content_type: application/gzip
